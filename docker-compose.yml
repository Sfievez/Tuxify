version: '3'

services:
  # PostgreSQL
  db:
    container_name: tuxify-db
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}

    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - tuxify-network

  # Nest API services
  api_gateway:
    container_name: tuxify-api-gateway
    image: node:latest
    restart: always
    command: yarn start:dev --preserveWatchOutput
    working_dir: /usr/src/app
    ports:
      - "3000:3000"
      - "8000:8000"
    volumes:
      - ./backend/gateway:/usr/src/app
      - ./backend/gateway/node_modules:/usr/src/app/node_modules
    depends_on:
      - db
    networks:
      - tuxify-network
    env_file:
      - .env

  # Mailer microservice
  api_mailer:
    container_name: tuxify-api-mailer
    image: node:latest
    restart: always
    command: yarn start:dev --preserveWatchOutput
    working_dir: /usr/src/app
    volumes:
      - ./backend/mailer:/usr/src/app
      - ./backend/mailer/node_modules:/usr/src/app/node_modules
    networks:
      - tuxify-network
    env_file:
      - .env

  # Nuxt Frontend
  frontend:
      container_name: tuxify-frontend
      image: node:latest
      restart: always
      command: yarn dev
      working_dir: /usr/src/app
      ports:
      - "8080:8080"
      - "24678:24678"
      volumes:
        - ./frontend:/usr/src/app
        - ./frontend/node_modules:/usr/src/app/node_modules
      depends_on:
        - api_gateway
      networks:
        - tuxify-network
      env_file:
        - .env


networks:
  tuxify-network:
    driver: bridge

volumes:
  db_data:
