# File Name: docker-compose.production.yml
# Author: Gwenaël Hubler, Stephane Fievez, Roman Lopes, Alexandre Kévin De Freitas Martins, Bouna Diallo
# Creation Date: 2023
# Description: Docker compose file for production
# Copyright (c) 2023 Tux Inc.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the 'Software'), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

version: "3"

services:
  # PostgreSQL
  db:
    container_name: tuxify-db
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}

    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - tuxify-network

  # Nest API
  api:
    container_name: tuxify-api
    image: node:latest
    restart: always
    command: yarn start:dev --preserveWatchOutput
    working_dir: /usr/src/app
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/usr/src/app
      - ./backend/node_modules:/usr/src/app/node_modules
    depends_on:
      - db
    networks:
      - tuxify-network
    env_file:
      - .env

  # Nuxt Frontend
  frontend:
    container_name: tuxify-frontend
    image: node:latest
    restart: always
    command: yarn dev
    working_dir: /usr/src/app
    ports:
      - "8080:8080"
    volumes:
      - ./frontend:/usr/src/app
      - ./frontend/node_modules:/usr/src/app/node_modules
    depends_on:
      - api
    networks:
      - tuxify-network
    env_file:
      - .env

networks:
  tuxify-network:
    driver: bridge

volumes:
  db_data:
